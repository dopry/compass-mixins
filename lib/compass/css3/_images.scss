@use "sass:color";
@use "shared";
@use "../utilities/general/hacks";
@use "../functions";
@use "../functions/cross_browser_support";
@use "../functions/lists";
@use "../support";

// Background property support for vendor prefixing within values.
@mixin background(
  $background-1,
  $background-2: false,
  $background-3: false,
  $background-4: false,
  $background-5: false,
  $background-6: false,
  $background-7: false,
  $background-8: false,
  $background-9: false,
  $background-10: false
) {
  $backgrounds: lists.compact($background-1, $background-2, $background-3, $background-4, $background-5,
                        $background-6, $background-7, $background-8, $background-9, $background-10);
  $mult-bgs: lists.compass-list-size($backgrounds) > 1;
  $add-pie-bg: cross_browser_support.prefixed(-pie,   $backgrounds) or $mult-bgs;
  @if support.$experimental-support-for-svg          and cross_browser_support.prefixed(-svg,    $backgrounds) {      background:    cross_browser_support.svg($backgrounds); }
  @if support.$support-for-original-webkit-gradients and cross_browser_support.prefixed(-owg,    $backgrounds) {      background:    cross_browser_support.owg($backgrounds); }
  @if support.$experimental-support-for-webkit       and cross_browser_support.prefixed(-webkit, $backgrounds) {      background: cross_browser_support.webkit($backgrounds); }
  @if support.$experimental-support-for-mozilla      and cross_browser_support.prefixed(-moz,    $backgrounds) {      background:    cross_browser_support.moz($backgrounds); }
  @if support.$experimental-support-for-opera        and cross_browser_support.prefixed(-o,      $backgrounds) {      background:      cross_browser_support.o($backgrounds); }
  @if support.$experimental-support-for-pie          and $add-pie-bg                     { -pie-background:         $backgrounds ; }
                                                                                        background:         $backgrounds ;
}

@mixin background-with-css2-fallback(
  $background-1,
  $background-2: false,
  $background-3: false,
  $background-4: false,
  $background-5: false,
  $background-6: false,
  $background-7: false,
  $background-8: false,
  $background-9: false,
  $background-10: false
) {
  $backgrounds: lists.compact($background-1, $background-2, $background-3, $background-4, $background-5,
                        $background-6, $background-7, $background-8, $background-9, $background-10);
  $mult-bgs: lists.compass-list-size($backgrounds) > 1;
  $simple-background: if($mult-bgs or cross_browser_support.prefixed(-css2, $backgrounds), -css2(lists.compass-nth($backgrounds, last)), false);
  @if not(blank($simple-background)) { background: $simple-background; }
  @include background($background-1, $background-2, $background-3, $background-4, $background-5,
                      $background-6, $background-7, $background-8, $background-9, $background-10);
}


// Background image property support for vendor prefixing within values.
@mixin background-image(
  $image-1,
  $image-2: false,
  $image-3: false,
  $image-4: false,
  $image-5: false,
  $image-6: false,
  $image-7: false,
  $image-8: false,
  $image-9: false,
  $image-10: false
) {
  $images: lists.compact($image-1, $image-2, $image-3, $image-4, $image-5, $image-6, $image-7, $image-8, $image-9, $image-10);
  $add-pie-bg: cross_browser_support.prefixed(-pie,   $images) or lists.compass-list-size($images) > 1;

  @if support.$experimental-support-for-svg          and cross_browser_support.prefixed(-svg,    $images) { background-image:    cross_browser_support.svg($images); background-size: 100%; }
  @if support.$support-for-original-webkit-gradients and cross_browser_support.prefixed(-owg,    $images) { background-image:    cross_browser_support.owg($images); }
  @if support.$experimental-support-for-webkit       and cross_browser_support.prefixed(-webkit, $images) { background-image: cross_browser_support.webkit($images); }
  @if support.$experimental-support-for-mozilla      and cross_browser_support.prefixed(-moz,    $images) { background-image:    cross_browser_support.moz($images); }
  @if support.$experimental-support-for-opera        and cross_browser_support.prefixed(-o,      $images) { background-image:      cross_browser_support.o($images); }
  @if support.$experimental-support-for-pie          and $add-pie-bg                { @warn "PIE does not support background-image. Use @include background(#{$images}) instead." }
                                                                              background-image:         $images ;
}

// Emit a IE-Specific filters that renders a simple linear gradient.
// For use in IE 6 - 8. Best practice would have you apply this via a
// conditional IE stylesheet, but if you must, you should place this before
// any background-image properties that you have specified.
//
// For the `$orientation` parameter, you can pass `vertical` or `horizontal`.
@mixin filter-gradient($start-color, $end-color, $orientation: vertical) {
  @include hacks.has-layout;
  $gradient-type: if($orientation == vertical, 0, 1);
  @if support.$legacy-support-for-ie6 or support.$legacy-support-for-ie7 or support.$legacy-support-for-ie8 {
    filter: progid:DXImageTransform.Microsoft.gradient(gradientType=#{$gradient-type}, startColorstr='#{color.ie-hex-str($start-color)}', endColorstr='#{color.ie-hex-str($end-color)}');
  }
}


// Border image property support for vendor prefixing properties and values.
@mixin border-image($value) {
  @if support.$experimental-support-for-mozilla      {    -moz-border-image:    cross_browser_support.moz(lists.reject(-compass-list($value), fill)); }
  @if support.$support-for-original-webkit-gradients { -webkit-border-image:    cross_browser_support.owg(lists.reject(-compass-list($value), fill)); }
  @if support.$experimental-support-for-webkit       { -webkit-border-image: cross_browser_support.webkit(lists.reject(-compass-list($value), fill)); }
  @if support.$experimental-support-for-opera        {      -o-border-image:      cross_browser_support.o(lists.reject(-compass-list($value), fill)); }
  @if support.$experimental-support-for-svg          {         border-image:    cross_browser_support.svg(lists.reject(-compass-list($value), fill)); }
                                                       border-image:                              $value;
}

// List style image property support for vendor prefixing within values.
@mixin list-style-image($image) {
  @if support.$experimental-support-for-mozilla      and cross_browser_support.prefixed(-moz,    $image) { list-style-image:    cross_browser_support.moz($image); }
  @if support.$support-for-original-webkit-gradients and cross_browser_support.prefixed(-owg,    $image) { list-style-image:    cross_browser_support.owg($image); }
  @if support.$experimental-support-for-webkit       and cross_browser_support.prefixed(-webkit, $image) { list-style-image: cross_browser_support.webkit($image); }
  @if support.$experimental-support-for-opera        and cross_browser_support.prefixed(-o,      $image) { list-style-image:      cross_browser_support.o($image); }
  @if support.$experimental-support-for-svg          and cross_browser_support.prefixed(-svg,    $image) { list-style-image:    cross_browser_support.svg($image); }
                                                                             list-style-image:         $image ;
}

// List style property support for vendor prefixing within values.
@mixin list-style($value) {
  $value: -compass-list($value);
  @if support.$experimental-support-for-mozilla      and cross_browser_support.prefixed(-moz,    $value) { list-style-image:    cross_browser_support.moz($value); }
  @if support.$support-for-original-webkit-gradients and cross_browser_support.prefixed(-owg,    $value) { list-style-image:    cross_browser_support.owg($value); }
  @if support.$experimental-support-for-webkit       and cross_browser_support.prefixed(-webkit, $value) { list-style-image: cross_browser_support.webkit($value); }
  @if support.$experimental-support-for-opera        and cross_browser_support.prefixed(-o,      $value) { list-style-image:      cross_browser_support.o($value); }
  @if support.$experimental-support-for-svg          and cross_browser_support.prefixed(-svg,    $value) { list-style-image:    cross_browser_support.svg($value); }
                                                                             list-style-image:         $value ;
}

// content property support for vendor prefixing within values.
@mixin content($value) {
  $value: -compass-list($value);
  @if support.$experimental-support-for-mozilla      and cross_browser_support.prefixed(-moz,    $value) { content:    cross_browser_support.moz($value); }
  @if support.$support-for-original-webkit-gradients and cross_browser_support.prefixed(-owg,    $value) { content:    cross_browser_support.owg($value); }
  @if support.$experimental-support-for-webkit       and cross_browser_support.prefixed(-webkit, $value) { content: cross_browser_support.webkit($value); }
  @if support.$experimental-support-for-opera        and cross_browser_support.prefixed(-o,      $value) { content:      cross_browser_support.o($value); }
  @if support.$experimental-support-for-svg          and cross_browser_support.prefixed(-svg,    $value) { content:    cross_browser_support.svg($value); }
                                                                             content:         $value ;
}
